<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security-4.2.xsd">
   <!-- 보안과 관련된 설정 파일 -->
   <!-- auto-config='true' : 기본 로그인페이지/ HTTP 기본인증 / 로그아웃기능사용을 위한 설정 
   use-expressions="true"    : <intercept-url>의 access 속성에 표현식을 사용한다는 의미 
   "false"면 access="USER" 로 값을 바로 사용 "true" 면 access="hasRole('ROLE_USER')" 사용 ROLE_는 생략 가능 -->
	<security:http auto-config="true" use-expressions="true">
	
		<security:headers>			
			<security:frame-options disabled="true"/>
		</security:headers>
<<<<<<< HEAD
		<security:intercept-url pattern="/member/**" access="hasRole('ROLE_USER')"/>
		<!--
		권한을 오라클에 모두 등록하면 주석 처리된 부분으로 바꿔주세요.
=======
>>>>>>> branch 'master' of https://github.com/gg4210/TeamProj.git
		<security:intercept-url pattern="/member/**" access="hasAnyRole('ROLE_USER,ROLE_CENTER,ROLE_ADMIN')"/>
		<security:intercept-url pattern="/user/**" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/center/**" access="hasRole('ROLE_CENTER')"/>
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		
		<security:intercept-url pattern="/**" access="permitAll"/>
		<security:form-login 
			login-page="/main.do?required"
            default-target-url="/main.do"
            authentication-failure-url="/main.do?error" 	
            login-processing-url="/loginprocess.do"
            username-parameter="id"
            password-parameter="password" 
        />
        <security:logout
        	logout-url="/logout.do"		            	            
			delete-cookies="true"
			invalidate-session="true"
		/>
        <security:csrf disabled="false" />
        <!-- 중복 로그인 방지용 -->
        <security:session-management invalid-session-url="/main.do">
			<security:concurrency-control 
              max-sessions="1"
              expired-url="/workout/main.do"
           />
        </security:session-management>
   </security:http>
   <security:authentication-manager>
      <security:authentication-provider>
         <security:jdbc-user-service 
            data-source-ref="datasource" 
            role-prefix=""
            users-by-username-query="SELECT H.ID AS USERNAME, H.PASSWORD AS PASS, enabled FROM H_MEMBER H JOIN AUTH_SECURITY A ON H.ID=A.ID WHERE H.ID=?"
            authorities-by-username-query="SELECT H.ID AS USERNAME,A.AUTHORITY AS AUTHORITY  FROM H_MEMBER H JOIN AUTH_SECURITY A ON H.ID=A.ID WHERE H.ID=?"
         />
      </security:authentication-provider>
   </security:authentication-manager>
   
</beans>
