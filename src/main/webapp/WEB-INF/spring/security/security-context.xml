<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">
   <!-- 보안과 관련된 설정 파일 -->
   <!-- auto-config='true' : 기본 로그인페이지/ HTTP 기본인증 / 로그아웃기능사용을 위한 설정 
   use-expressions="true"    : <intercept-url>의 access 속성에 표현식을 사용한다는 의미 
   "false"면 access="USER" 로 값을 바로 사용 "true" 면 access="hasRole('ROLE_USER')" 사용 ROLE_는 생략 가능 -->
   <security:http auto-config="true" use-expressions="true">
      <security:intercept-url pattern="/WorkOut/BBS/**" access="hasAnyRole('USER','ADMIN')"/>
      <security:intercept-url pattern="/**" access="permitAll"/>
      <security:form-login 
         login-page="/WorkOut/Auth/login.bbs"
            default-target-url="/WorkOut/Auth/login.bbs"
            authentication-failure-url="/WorkOut/Auth/login.bbs?error"
            login-processing-url="/WorkOut/Auth/loginProcess.bbs"
            username-parameter="id"
            password-parameter="pwd" 
        />
        <security:csrf disabled="false" />
        <!-- 중복 로그인 방지용 -->
        <security:session-management invalid-session-url="/WorkOut/Auth/login.bbs">
           <security:concurrency-control 
              max-sessions="1"
              expired-url="/WorkOut/Auth/login.bbs" 
           />
        </security:session-management>
   </security:http>
   <security:authentication-manager>
      <security:authentication-provider>
         <security:jdbc-user-service 
            data-source-ref="datasource" 
            role-prefix=""
            users-by-username-query="SELECT m.id username, m.pwd password, enabled FROM member m JOIN auth_security a ON m.id=a.id WHERE m.id=?"
            authorities-by-username-query="SELECT m.id username, authority FROM member m JOIN auth_security a ON m.id=a.id WHERE m.id=?"
         />
      </security:authentication-provider>
   
   </security:authentication-manager>
   
</beans>
